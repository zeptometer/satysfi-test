module WasRun : sig

  type t

  val make : string -> t
  val wasRun : t -> bool
  val run: t -> unit

end = struct

  type s = (|
    wasRun: bool ref;
    testedFun: unit -> unit;
  |)
  type t = s

  let make name =
    let-mutable r <- false in
    (|
      wasRun = r;
      testedFun = fun () -> (r <- true);
    |)

  let wasRun test =
    !test#wasRun

  let run test =
    test#testedFun ()

end
