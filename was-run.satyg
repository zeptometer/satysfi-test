module TestCase : sig

  type t

  val make : (unit -> unit) -> t
  val run: t -> unit

end = struct

  type s = unit -> unit
  type t = s

  let make testFun = testFun

  let run test = test ()

end

module WasRun: sig

  type t

  val make : unit -> t * TestCase.t

  val was-run : t -> bool
  val was-set-up : t -> bool

end = struct

  type s = bool ref
  type t = s

  let make x =
    let-mutable r <- false in
    let test-fun = fun () -> (r <- true) in
  (r, TestCase.make test-fun)

  let was-run x = !x
  let was-set-up x = false

end
