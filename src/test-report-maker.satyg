@import: test-case
@import: test-run-result

module TestReportMaker : sig

  val make-report : TestRunResult.t -> string

end = struct

  let newline = `

`#

  let make-summary result =
    open TestRunResult in
    let run-count = result |> count-run in
    let success-count = result |> count-success in
    #`Test summary : `#
    ^ (arabic run-count) ^ #` run, `#
    ^ (arabic success-count) ^ #` success, `#
    ^ (arabic (run-count - success-count)) ^ #` fail`#
    ^ newline

  let make-detail result = result |> TestRunResult.get-detail
    |> TestCaseResult.cases (|
      single = (fun (single) -> (
        `Test run report`
        ^ newline
        ^ `- `#
        ^ single#description
        ^ #` -> `#
        ^ (single#status |> TestCaseResultStatus.cases (|
          success = (fun () -> `PASS`);
          fail = (fun () -> `FAIL`);
        |))
        ^ newline
      ))
    |)

  let make-report run-result =
    let summary-text = run-result |> make-summary in
    let report-text = run-result |> make-detail in
    let output = summary-text ^ newline ^ report-text in
    output

end
